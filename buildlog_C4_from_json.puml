@startuml buildlog context from json
!function $get_c4_diagram($id)

' !log getting diagram $id
' !log {{json $diagrams}}

    %set_variable_value($diagram_exist, %false())
    !foreach $diagram in $diagrams.c4DiagramRegistry.diagrams
        !if $diagram.c4Id == $id
            %set_variable_value($diagram_exist, %true())
            !return $diagram
        !endif
    !endfor

    !if $diagram_exist == %false()
        'return eror reponse if json file not found
        !return {"diagrams":[{"c4Id": "error","title": "Can't find in C4_diagrams.json"}]}
    !endif
    
!endfunction

!function $get_c4_object($id)
' !log checking for $id
%set_variable_value($object_exist, %false())
!foreach $object in $objects.c4ObjectRegistry.objects
    ' !log is it $object.c4objectID?
    !if $object.c4objectID == $id
        %set_variable_value($object_exist, %true())
        ' !log got a hit
        ' !log {{json $object}}
        !return $object
    ' !else
    '     !log nah.. $object.c4objectID not it
    !endif
!endfor

!if $object_exist == %false()
    ' !log return as error
    $object = {"c4objectID":"error","c4objectType":"error","c4objectName":"error","c4objectDesc":"error"}}}
    !return $object
!endif

!endfunction

!unquoted procedure $c4_diagram($id)
'load diagrams
'!assert %not(%file_exists("C4_diagrams.json")) : Cannot locate C4_diagrams.json
!global $diagrams = %load_json("https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_diagrams.json")
'load objects
'!assert %not(%file_exists("C4_objects.json")) : Cannot locate C4_objects.json
!global $objects = %load_json("https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_objects.json")

!$diagram = $get_c4_diagram($id)

title $diagram.title - $C4_DIAGRAM_TYPE Diagram


    'output associated diagram objects (diagram dependant)

    'Context view.. People, System, Enterprise_Boundary
    'Container View.. System Boundary, Container
    'Componenet View.. Container Boundary and Components

'note as n1
    !foreach $contain in $diagram.contains
        !if $C4_DIAGRAM_TYPE == "Context"
            !local $object = $get_c4_object($contain.c4objectID)
            !if $contain.c4objectType == "Person"
                !if $INCLUDE_DESC == "Y"
Person($contain.c4objectID, "$object.c4objectName", "$object.c4objectDesc")
                !else 
Person($contain.c4objectID, "$object.c4objectName")
                !endif 
            !elseif $contain.c4objectType == "Person_Ext"
                !if $INCLUDE_DESC == "Y"
Person_Ext($contain.c4objectID, "$object.c4objectName", "$object.c4objectDesc")
                !else 
Person_Ext($contain.c4objectID, "$object.c4objectName")
                !endif 
            !elseif $contain.c4objectType == "System"
                !if $INCLUDE_DESC == "Y"
System($contain.c4objectID, "$object.c4objectName", "$object.c4objectDesc")
                !else 
System($contain.c4objectID, "$object.c4objectName")
                !endif 
            ' !elseif %strpos($element.c4objectType, "Boundary") > 0
            ' note bottom
            ' $element.c4objectType to be added
            ' end note
            !endif
        !endif

        'if object has contains..  add recursion logic to push/pop levels
        'get_c4_object
    !endfor

    'output associated relationships 
    !foreach $relationship in $diagram.relationships
            'need to resolve relationship type
            !if $relationship.c4relationshipType == "Rel_R"
Rel_R($relationship.c4relationshipFrom, $relationship.c4relationshipTo,"$relationship.c4relationshipDesc")
            !elseif $relationship.c4relationshipType == "Rel_L"
Rel_L($relationship.c4relationshipFrom, $relationship.c4relationshipTo,"$relationship.c4relationshipDesc")
            !elseif $relationship.c4relationshipType == "Rel_U"
Rel_U($relationship.c4relationshipFrom, $relationship.c4relationshipTo,"$relationship.c4relationshipDesc")
            !elseif $relationship.c4relationshipType == "Rel_D"
Rel_D($relationship.c4relationshipFrom, $relationship.c4relationshipTo,"$relationship.c4relationshipDesc")
            !elseif $relationship.c4relationshipType == "Lay_L"
Lay_L($relationship.c4relationshipFrom, $relationship.c4relationshipTo)
            !elseif $relationship.c4relationshipType == "Lay_R"
Lay_R($relationship.c4relationshipFrom, $relationship.c4relationshipTo)
            !elseif $relationship.c4relationshipType == "Lay_U"
Lay_U($relationship.c4relationshipFrom, $relationship.c4relationshipTo)
            !elseif $relationship.c4relationshipType == "Lay_D"
Lay_D($relationship.c4relationshipFrom, $relationship.c4relationshipTo)
            !else
Rel($relationship.c4relationshipFrom, $relationship.c4relationshipTo,"$relationship.c4relationshipDesc")
            !endif
    !endfor
SHOW_LEGEND()
'end note
!endprocedure

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Container.puml
'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Component.puml
'!include C4_helper.iuml

'Set Diagram settings
%set_variable_value("$C4_DIAGRAM_TYPE", "Context")
'%set_variable_value("$C4_DIAGRAM_TYPE", "Container")
'%set_variable_value("$C4_DIAGRAM_TYPE", "Component")
%set_variable_value("$INCLUDE_DESC", "Y")

'Call procedure to build the diagram
$c4_diagram(enterprise)

@enduml